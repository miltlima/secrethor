name: Release

on:
  push:
    branches:
      - main

jobs:
  release:
    name: Semantic Release & Publish
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'

      - name: Install git-chglog
        run: |
          GHCHGLOG_VERSION="0.15.4"
          curl -L https://github.com/git-chglog/git-chglog/releases/download/v${GHCHGLOG_VERSION}/git-chglog_${GHCHGLOG_VERSION}_linux_amd64.tar.gz | tar -xz
          chmod +x git-chglog
          sudo mv git-chglog /usr/local/bin/

      - name: Generate version
        id: version
        run: |
          VERSION="v$(date +%Y.%m.%d.%H%M)"  # ou use git-chglog --next-tag se preferir inferir
          echo "VERSION=$VERSION" >> "$GITHUB_ENV"
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
      
      - name: Initialize git-chglog config
        run: git-chglog init
  
      - name: Generate CHANGELOG
        run: git-chglog -o CHANGELOG.md ${{ env.VERSION }}

      - name: Commit CHANGELOG and tag
        run: | 
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add CHANGELOG.md
          git commit -m "docs(changelog): update CHANGELOG for ${{ env.VERSION }}"
          git tag -a "${{ env.VERSION }}" -m "Release ${{ env.VERSION }}"
          git push origin main --tags

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: v3.14.0

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ vars.DOCKER_USERNAME }}" --password-stdin

      - name: Build and push Docker image
        run: |
          docker build -t docker.io/bonovoo/secrethor:${{ env.VERSION }} .
          docker push docker.io/bonovoo/secrethor:${{ env.VERSION }}

      - name: Set Helm chart version
        run: |
          sed -i "s/^version:.*/version: ${{ env.VERSION }}/" charts/secrethor/Chart.yaml
          sed -i "s/^appVersion:.*/appVersion: \"${{ env.VERSION }}\"/" charts/secrethor/Chart.yaml

      - name: Package Helm chart
        run: |
          mkdir -p dist
          helm package charts/secrethor --destination dist

      - name: Prepare Helm chart index for GitHub Pages
        run: |
          mkdir -p gh-pages
          cp dist/secrethor-${{ env.RELEASE_VERSION }}.tgz gh-pages/
          helm repo index gh-pages --url https://github.com/${{ github.repository }}/releases/download/v${{ env.RELEASE_VERSION }}
          touch gh-pages/.nojekyll

      - name: Push Helm chart to gh-pages branch
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: gh-pages
          publish_branch: gh-pages
          force_orphan: true

      - name: Attach artifacts to GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v${{ env.RELEASE_VERSION }}
          files: |
            dist/secrethor-${{ env.RELEASE_VERSION }}.tgz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
